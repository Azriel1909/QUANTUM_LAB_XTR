//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"RNG\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"RNG\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"RNM\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":23,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"min\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":19}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"max\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":29}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"RNM\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":23,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"GCD_M3\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"a\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":19}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"N\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":27}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"GCD_M3\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FPF\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":61,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"module\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":22}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"randomGenerator\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":29},\"Item2\":{\"Line\":1,\"Column\":44}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"r\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":51},\"Item2\":{\"Line\":1,\"Column\":52}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Bool\"},{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FPF\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":61,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FTO\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":79,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"randomGenerator\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"module\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":45}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"power\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":52},\"Item2\":{\"Line\":1,\"Column\":57}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":65},\"Item2\":{\"Line\":1,\"Column\":71}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FTO\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":79,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FTO\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":79,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":93},\"Item2\":{\"Line\":1,\"Column\":102}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Shor_Algo.FTO\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FTO\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":79,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":93},\"Item2\":{\"Line\":1,\"Column\":102}},\"Documentation\":[\"automatically generated QsControlled specialization for Shor_Algo.FTO\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"FTO\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":79,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":93},\"Item2\":{\"Line\":1,\"Column\":102}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Shor_Algo.FTO\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"periodFrequency\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":85,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"module\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"frequencyEstimation\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":42},\"Item2\":{\"Line\":1,\"Column\":61}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bitsPrecision\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":69},\"Item2\":{\"Line\":1,\"Column\":82}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"currentDivisor\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":89},\"Item2\":{\"Line\":1,\"Column\":103}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"periodFrequency\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":85,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"EFV\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":92,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"randomGenerator\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"module\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":45}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bits\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":52},\"Item2\":{\"Line\":1,\"Column\":56}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"EFV\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":92,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"QPE\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":123,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"randomGenerator\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"module\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":38},\"Item2\":{\"Line\":1,\"Column\":44}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"QPE\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":123,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"ShorAlgorithm\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":147,\"Item2\":4},\"Comments\":{\"OpeningComments\":[\" Phase 6: Algorithms Integration\"],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":148,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"n\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":27}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Shor_Algo\",\"Name\":\"ShorAlgorithm\"},\"Attributes\":[],\"SourceFile\":\"/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs\",\"Position\":{\"Item1\":148,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
#line hidden
namespace Shor_Algo
{
    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 16, 24)]
    public partial class RNG : Operation<QVoid, Result>, ICallable
    {
        public RNG(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "RNG";
        String ICallable.FullName => "Shor_Algo.RNG";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        public override Func<QVoid, Result> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 17 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                var q1 = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 18 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q1);
#line 19 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    var measuredQubit = Microsoft__Quantum__Intrinsic__M.Apply(q1);
#line 20 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    return measuredQubit;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q1);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__)
        {
            return __m__.Run<RNG, QVoid, Result>(QVoid.Instance);
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 24, 41)]
    public partial class RNM : Operation<(Int64,Int64), Int64>, ICallable
    {
        public RNM(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "RNM";
        String ICallable.FullName => "Shor_Algo.RNM";
        protected ICallable<Int64, Int64> Microsoft__Quantum__Math__BitSizeI
        {
            get;
            set;
        }

        protected ICallable<QVoid, Result> RNG__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, Int64> Microsoft__Quantum__Convert__ResultArrayAsInt
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (min,max) = __in__;
#line 25 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var output = 0L;
#line 26 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            while (true)
            {
#line 27 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                var bits = new QArray<Result>();
#line 28 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                foreach (var indexBit in new QRange(1L, Microsoft__Quantum__Math__BitSizeI.Apply(max)))
#line hidden
                {
#line 29 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    bits = QArray<Result>.Add(bits, new QArray<Result>(RNG__.Apply(QVoid.Instance)));
                }

#line 31 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                foreach (var indexBit in new QRange(1L, Microsoft__Quantum__Math__BitSizeI.Apply(min)))
#line hidden
                {
#line 32 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    bits = QArray<Result>.Add(bits, new QArray<Result>(RNG__.Apply(QVoid.Instance)));
                }

#line 34 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                output = Microsoft__Quantum__Convert__ResultArrayAsInt.Apply(bits?.Copy());
                if (((output >= min) && (output <= max)))
                {
                    break;
                }
                else
                {
                }
            }

#line 36 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Message__.Apply(String.Format("Número aleatorio entre {0} y {1}: ", min, max));
#line 37 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            return output;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__BitSizeI = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(global::Microsoft.Quantum.Math.BitSizeI));
            this.RNG__ = this.__Factory__.Get<ICallable<QVoid, Result>>(typeof(RNG));
            this.Microsoft__Quantum__Convert__ResultArrayAsInt = this.__Factory__.Get<ICallable<IQArray<Result>, Int64>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsInt));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 min, Int64 max)
        {
            return __m__.Run<RNM, (Int64,Int64), Int64>((min, max));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 41, 62)]
    public partial class GCD_M3 : Operation<(Int64,Int64), Int64>, ICallable
    {
        public GCD_M3(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "GCD_M3";
        String ICallable.FullName => "Shor_Algo.GCD_M3";
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> self
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (a,N) = __in__;
#line 43 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if ((a == 0L))
            {
#line 44 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                return N;
            }

#line 45 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if ((N == 0L))
            {
#line 46 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                return a;
            }

#line 47 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if ((a == N))
            {
#line 48 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                return a;
            }

#line 49 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if ((a > N))
            {
#line 50 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                Message__.Apply(String.Format("GCD de {0} y {1}:", a, N));
#line 51 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                return self.Apply<Int64>(((a - N), N));
            }

#line 53 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            return self.Apply<Int64>((a, (N - a)));
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.self = this;
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 a, Int64 N)
        {
            return __m__.Run<GCD_M3, (Int64,Int64), Int64>((a, N));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 62, 80)]
    public partial class FPF : Operation<(Int64,Int64,Int64), (Boolean,(Int64,Int64))>, ICallable
    {
        public FPF(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        public class Out : QTuple<(Boolean,(Int64,Int64))>, IApplyData
        {
            public Out((Boolean,(Int64,Int64)) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "FPF";
        String ICallable.FullName => "Shor_Algo.FPF";
        protected ICallable<(Int64,Int64,Int64), Int64> Microsoft__Quantum__Math__ExpModI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> Microsoft__Quantum__Math__MaxI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> GCD_M3__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Int64), (Boolean,(Int64,Int64))> __Body__ => (__in__) =>
        {
            var (module,randomGenerator,r) = __in__;
#line 63 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if (((r % 2L) == 0L))
            {
#line 64 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                var halfExponentiation = Microsoft__Quantum__Math__ExpModI.Apply((randomGenerator, (r / 2L), module));
#line 65 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                if ((halfExponentiation != (module - 1L)))
                {
#line 66 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    var factor = Microsoft__Quantum__Math__MaxI.Apply((GCD_M3__.Apply(((halfExponentiation - 1L), module)), GCD_M3__.Apply(((halfExponentiation + 1L), module))));
#line 70 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    return (true, (factor, (module / factor)));
                }
                else
                {
#line 72 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    return (false, (1L, 1L));
                }
            }
            else
            {
#line 75 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                return (false, (1L, 1L));
            }
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__ExpModI = this.__Factory__.Get<ICallable<(Int64,Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.ExpModI));
            this.Microsoft__Quantum__Math__MaxI = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.MaxI));
            this.GCD_M3__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(GCD_M3));
        }

        public override IApplyData __DataIn__((Int64,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__((Boolean,(Int64,Int64)) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Boolean,(Int64,Int64))> Run(IOperationFactory __m__, Int64 module, Int64 randomGenerator, Int64 r)
        {
            return __m__.Run<FPF, (Int64,Int64,Int64), (Boolean,(Int64,Int64))>((module, randomGenerator, r));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 80, 86)]
    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Adjoint, 80, 86)]
    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Controlled, 80, 86)]
    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.ControlledAdjoint, 80, 86)]
    public partial class FTO : Unitary<(Int64,Int64,Int64,IQArray<Qubit>)>, ICallable
    {
        public FTO(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Int64,IQArray<Qubit>)>, IApplyData
        {
            public In((Int64,Int64,Int64,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item4)?.Qubits;
                }
            }
        }

        String ICallable.Name => "FTO";
        String ICallable.FullName => "Shor_Algo.FTO";
        protected ICallable<(Boolean,String), QVoid> Microsoft__Quantum__Diagnostics__Fact
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Boolean> Microsoft__Quantum__Math__IsCoprimeI
        {
            get;
            set;
        }

        protected IUnitary<(Int64,Int64,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Arithmetic__MultiplyByModularInteger
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64,Int64), Int64> Microsoft__Quantum__Math__ExpModI
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian> Microsoft__Quantum__Arithmetic__LittleEndian
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Int64,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (randomGenerator,module,power,target) = __in__;
#line 82 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Diagnostics__Fact.Apply((Microsoft__Quantum__Math__IsCoprimeI.Apply((randomGenerator, module)), "El número aleatorio es `randomGenerator`, y el modulo es `module`."));
#line 83 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyByModularInteger.Apply((Microsoft__Quantum__Math__ExpModI.Apply((randomGenerator, power, module)), module, new Microsoft.Quantum.Arithmetic.LittleEndian(target)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Int64,Int64,Int64,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (randomGenerator,module,power,target) = __in__;
#line 80 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Diagnostics__Fact.Apply((Microsoft__Quantum__Math__IsCoprimeI.Apply((randomGenerator, module)), "El número aleatorio es `randomGenerator`, y el modulo es `module`."));
#line 80 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyByModularInteger.Adjoint.Apply((Microsoft__Quantum__Math__ExpModI.Apply((randomGenerator, power, module)), module, new Microsoft.Quantum.Arithmetic.LittleEndian(target)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Int64,Int64,Int64,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(randomGenerator,module,power,target)) = __in__;
#line 80 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Diagnostics__Fact.Apply((Microsoft__Quantum__Math__IsCoprimeI.Apply((randomGenerator, module)), "El número aleatorio es `randomGenerator`, y el modulo es `module`."));
#line 80 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyByModularInteger.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Math__ExpModI.Apply((randomGenerator, power, module)), module, new Microsoft.Quantum.Arithmetic.LittleEndian(target))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Int64,Int64,Int64,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(randomGenerator,module,power,target)) = __in__;
#line 80 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Diagnostics__Fact.Apply((Microsoft__Quantum__Math__IsCoprimeI.Apply((randomGenerator, module)), "El número aleatorio es `randomGenerator`, y el modulo es `module`."));
#line 80 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyByModularInteger.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Math__ExpModI.Apply((randomGenerator, power, module)), module, new Microsoft.Quantum.Arithmetic.LittleEndian(target))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Diagnostics__Fact = this.__Factory__.Get<ICallable<(Boolean,String), QVoid>>(typeof(global::Microsoft.Quantum.Diagnostics.Fact));
            this.Microsoft__Quantum__Math__IsCoprimeI = this.__Factory__.Get<ICallable<(Int64,Int64), Boolean>>(typeof(global::Microsoft.Quantum.Math.IsCoprimeI));
            this.Microsoft__Quantum__Arithmetic__MultiplyByModularInteger = this.__Factory__.Get<IUnitary<(Int64,Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Arithmetic.MultiplyByModularInteger));
            this.Microsoft__Quantum__Math__ExpModI = this.__Factory__.Get<ICallable<(Int64,Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.ExpModI));
            this.Microsoft__Quantum__Arithmetic__LittleEndian = this.__Factory__.Get<ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian>>(typeof(global::Microsoft.Quantum.Arithmetic.LittleEndian));
        }

        public override IApplyData __DataIn__((Int64,Int64,Int64,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 randomGenerator, Int64 module, Int64 power, IQArray<Qubit> target)
        {
            return __m__.Run<FTO, (Int64,Int64,Int64,IQArray<Qubit>), QVoid>((randomGenerator, module, power, target));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 86, 93)]
    public partial class periodFrequency : Operation<(Int64,Int64,Int64,Int64), Int64>, ICallable
    {
        public periodFrequency(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "periodFrequency";
        String ICallable.FullName => "Shor_Algo.periodFrequency";
        protected ICallable<(Microsoft.Quantum.Math.Fraction,Int64), Microsoft.Quantum.Math.Fraction> Microsoft__Quantum__Math__ContinuedFractionConvergentI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Microsoft.Quantum.Math.Fraction> Microsoft__Quantum__Math__Fraction
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> Microsoft__Quantum__Math__AbsI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> GCD_M3__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (module,frequencyEstimation,bitsPrecision,currentDivisor) = __in__;
#line 87 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var (s,r) = Microsoft__Quantum__Math__ContinuedFractionConvergentI.Apply((new Microsoft.Quantum.Math.Fraction((frequencyEstimation, 2L.Pow(bitsPrecision))), module)).Data;
#line 88 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var (sAbsolute,rAbsolute) = (Microsoft__Quantum__Math__AbsI.Apply(s), Microsoft__Quantum__Math__AbsI.Apply(r));
#line 89 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            return ((rAbsolute * currentDivisor) / GCD_M3__.Apply((currentDivisor, rAbsolute)));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__ContinuedFractionConvergentI = this.__Factory__.Get<ICallable<(Microsoft.Quantum.Math.Fraction,Int64), Microsoft.Quantum.Math.Fraction>>(typeof(global::Microsoft.Quantum.Math.ContinuedFractionConvergentI));
            this.Microsoft__Quantum__Math__Fraction = this.__Factory__.Get<ICallable<(Int64,Int64), Microsoft.Quantum.Math.Fraction>>(typeof(global::Microsoft.Quantum.Math.Fraction));
            this.Microsoft__Quantum__Math__AbsI = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(global::Microsoft.Quantum.Math.AbsI));
            this.GCD_M3__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(GCD_M3));
        }

        public override IApplyData __DataIn__((Int64,Int64,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 module, Int64 frequencyEstimation, Int64 bitsPrecision, Int64 currentDivisor)
        {
            return __m__.Run<periodFrequency, (Int64,Int64,Int64,Int64), Int64>((module, frequencyEstimation, bitsPrecision, currentDivisor));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 93, 124)]
    public partial class EFV : Operation<(Int64,Int64,Int64), Int64>, ICallable
    {
        public EFV(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "EFV";
        String ICallable.FullName => "Shor_Algo.EFV";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian> Microsoft__Quantum__Arithmetic__LittleEndian
        {
            get;
            set;
        }

        protected IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Arithmetic__ApplyXorInPlace
        {
            get;
            set;
        }

        protected IUnitary<(Int64,Int64,Int64,IQArray<Qubit>)> FTO__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Int64,Int64,Qubit)> R1Frac__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (randomGenerator,module,bits) = __in__;
#line 96 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var frequencyEstimation = 0L;
#line 98 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var bitsPrecision = ((2L * bits) + 1L);
#line hidden
            {
#line 100 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                var eigenStateRegister = Allocate__.Apply(bits);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 102 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    var eigenStateRegisterLittleEndian = new Microsoft.Quantum.Arithmetic.LittleEndian(eigenStateRegister);
#line 104 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    Microsoft__Quantum__Arithmetic__ApplyXorInPlace.Apply((1L, eigenStateRegisterLittleEndian));
#line 106 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    var oracle = FTO__.Partial(new Func<(Int64,IQArray<Qubit>), (Int64,Int64,Int64,IQArray<Qubit>)>((__arg2__) => (randomGenerator, module, __arg2__.Item1, __arg2__.Item2)));
#line hidden
                    {
#line 108 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                        var a = Allocate__.Apply();
#line hidden
                        bool __arg3__ = true;
                        try
                        {
#line 109 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                            foreach (var index in new QRange((bitsPrecision - 1L), -(1L), 0L))
#line hidden
                            {
#line 111 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                                Microsoft__Quantum__Intrinsic__H.Apply(a);
#line 113 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                                oracle.Controlled.Apply((new QArray<Qubit>(a), ((1L << (int)index), eigenStateRegisterLittleEndian.Data)));
#line 114 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                                R1Frac__.Apply((frequencyEstimation, ((bitsPrecision - 1L) - index), a));
#line 93 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                                Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(a);
#line 115 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                                if ((Microsoft__Quantum__Measurement__MResetZ.Apply(a) == Result.One))
                                {
#line 116 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                                    frequencyEstimation = (frequencyEstimation + (1L << (int)((bitsPrecision - 1L) - index)));
                                }
                            }

#line 119 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                            ResetAll__.Apply(eigenStateRegister);
#line 120 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                            return frequencyEstimation;
                        }
#line hidden
                        catch
                        {
                            __arg3__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg3__)
                            {
#line hidden
                                Release__.Apply(a);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(eigenStateRegister);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Arithmetic__LittleEndian = this.__Factory__.Get<ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian>>(typeof(global::Microsoft.Quantum.Arithmetic.LittleEndian));
            this.Microsoft__Quantum__Arithmetic__ApplyXorInPlace = this.__Factory__.Get<IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Arithmetic.ApplyXorInPlace));
            this.FTO__ = this.__Factory__.Get<IUnitary<(Int64,Int64,Int64,IQArray<Qubit>)>>(typeof(FTO));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.R1Frac__ = this.__Factory__.Get<IUnitary<(Int64,Int64,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.R1Frac));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__((Int64,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 randomGenerator, Int64 module, Int64 bits)
        {
            return __m__.Run<EFV, (Int64,Int64,Int64), Int64>((randomGenerator, module, bits));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 124, 149)]
    public partial class QPE : Operation<(Int64,Int64), Int64>, ICallable
    {
        public QPE(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "QPE";
        String ICallable.FullName => "Shor_Algo.QPE";
        protected ICallable<(Boolean,String), QVoid> Microsoft__Quantum__Diagnostics__Fact
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Boolean> Microsoft__Quantum__Math__IsCoprimeI
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> Microsoft__Quantum__Math__BitSizeI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64,Int64), Int64> EFV__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64,Int64,Int64), Int64> periodFrequency__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (randomGenerator,module) = __in__;
#line 127 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            Microsoft__Quantum__Diagnostics__Fact.Apply((Microsoft__Quantum__Math__IsCoprimeI.Apply((randomGenerator, module)), "El numero aleatorio es `randomGenerator` y el modulo es `module`."));
#line 129 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var result = 1L;
#line 131 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var bits = Microsoft__Quantum__Math__BitSizeI.Apply(module);
#line 133 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var bitsPrecision = ((2L * bits) + 1L);
#line 135 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var frequencyEstimation = 0L;
#line 137 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            frequencyEstimation = EFV__.Apply((randomGenerator, module, bits));
#line 139 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if ((frequencyEstimation != 0L))
            {
#line 140 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                result = periodFrequency__.Apply((module, frequencyEstimation, bitsPrecision, result));
            }
            else
            {
#line 142 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                Message__.Apply("La frecuencia estimada tiene el valor 0.");
            }

#line 144 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Diagnostics__Fact = this.__Factory__.Get<ICallable<(Boolean,String), QVoid>>(typeof(global::Microsoft.Quantum.Diagnostics.Fact));
            this.Microsoft__Quantum__Math__IsCoprimeI = this.__Factory__.Get<ICallable<(Int64,Int64), Boolean>>(typeof(global::Microsoft.Quantum.Math.IsCoprimeI));
            this.Microsoft__Quantum__Math__BitSizeI = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(global::Microsoft.Quantum.Math.BitSizeI));
            this.EFV__ = this.__Factory__.Get<ICallable<(Int64,Int64,Int64), Int64>>(typeof(EFV));
            this.periodFrequency__ = this.__Factory__.Get<ICallable<(Int64,Int64,Int64,Int64), Int64>>(typeof(periodFrequency));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 randomGenerator, Int64 module)
        {
            return __m__.Run<QPE, (Int64,Int64), Int64>((randomGenerator, module));
        }
    }

    [SourceLocation("/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs", OperationFunctor.Body, 149, -1)]
    public partial class ShorAlgorithm : Operation<Int64, (Int64,Int64)>, ICallable
    {
        public ShorAlgorithm(IOperationFactory m) : base(m)
        {
        }

        public class Out : QTuple<(Int64,Int64)>, IApplyData
        {
            public Out((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ShorAlgorithm";
        String ICallable.FullName => "Shor_Algo.ShorAlgorithm";
        public static EntryPointInfo<Int64, (Int64,Int64)> Info => new EntryPointInfo<Int64, (Int64,Int64)>(typeof(ShorAlgorithm));
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> RNM__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Boolean> Microsoft__Quantum__Math__IsCoprimeI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> QPE__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64,Int64), (Boolean,(Int64,Int64))> FPF__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> GCD_M3__
        {
            get;
            set;
        }

        public override Func<Int64, (Int64,Int64)> __Body__ => (__in__) =>
        {
            var n = __in__;
#line 151 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            if (((n % 2L) == 0L))
            {
#line 152 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                Message__.Apply("Caso trivial: El número es par.");
#line 153 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                return ((n / 2L), 2L);
            }

#line 156 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var setUpFactors = false;
#line 157 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            var defaultFactors = (1L, 1L);
#line 159 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            while (true)
            {
#line 160 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                var randomGenerator = RNM__.Apply((2L, (n - 1L)));
#line 162 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                if (Microsoft__Quantum__Math__IsCoprimeI.Apply((randomGenerator, n)))
                {
#line 163 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    Message__.Apply(String.Format("Número aleatorio: {0}", randomGenerator));
#line 164 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    var r = QPE__.Apply((randomGenerator, n));
#line 165 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    (setUpFactors, defaultFactors) = FPF__.Apply((n, randomGenerator, r));
                }
                else
                {
#line 167 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    var GCD = GCD_M3__.Apply((n, randomGenerator));
#line 168 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    Message__.Apply(String.Format("Divisor optenido: {0}, GCD: {1}.", n, GCD));
#line 169 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    setUpFactors = true;
#line 170 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    defaultFactors = (GCD, (n / GCD));
                }

                if (setUpFactors)
                {
                    break;
                }
                else
                {
#line 174 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
                    Message__.Apply("La estimación del periodo no retorna un factor valido.");
                }
            }

#line 176 "/home/ximena/Documents/CODING/Q#/ShorAlgoClasicImplementation/Program.qs"
            return defaultFactors;
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.RNM__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(RNM));
            this.Microsoft__Quantum__Math__IsCoprimeI = this.__Factory__.Get<ICallable<(Int64,Int64), Boolean>>(typeof(global::Microsoft.Quantum.Math.IsCoprimeI));
            this.QPE__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(QPE));
            this.FPF__ = this.__Factory__.Get<ICallable<(Int64,Int64,Int64), (Boolean,(Int64,Int64))>>(typeof(FPF));
            this.GCD_M3__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(GCD_M3));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__((Int64,Int64) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Int64)> Run(IOperationFactory __m__, Int64 n)
        {
            return __m__.Run<ShorAlgorithm, Int64, (Int64,Int64)>(n);
        }
    }
}